{"version":3,"sources":["components/Background/Background.jsx","components/Camera/Camera.jsx","components/Item/Item.jsx","services/local-storage.service.js","components/List/List.jsx","components/Microphone/Microphone.jsx","App.js","serviceWorker.js","index.js"],"names":["Background","props","children","react_default","a","createElement","className","Camera","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","camera","React","createRef","takePicture","bind","assertThisInitialized","capture","then","blob","reader","FileReader","readAsDataURL","onloadend","base64data","result","console","log","_this2","dist_es6","ref","cam","Component","Item","_this$props","preTitle","subTitle","ls","get","itemId","JSON","parse","window","localStorage","getItem","set","itemContent","setItem","stringify","remove","removeItem","List","state","active","top","middle","bottom","handleChange","toggle","_this$state","evt","target","name","value","setState","defineProperty","_this$state2","components_Item_Item","dangerouslySetInnerHTML","__html","replace","concat","placeholder","type","onChange","onClick","Microphone","color","background","recording","width","innerWidth","height","innerHeight","handleResize","onReceiveData","addEventListener","removeEventListener","setTimeout","recordedBlob","onData","es","record","strokeColor","duration","backgroundColor","App","micData","timer","onMic","data","components_Background_Background","components_Camera_Camera","components_List_List","components_Microphone_Microphone","audioBitsPerSecond","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc2cae1e.chunk.js","sourcesContent":["/* Packages */\nimport React from 'react';\n\n/* Component */\nconst Background = (props) => {\n    const { children } = props;\n\n    return (\n        <div className=\"background\">\n            {children}\n        </div>\n    );\n};\n\n/* Exporting */\nexport default Background;\n","/* Packages */\nimport React, { Component } from 'react';\nimport Cam from 'react-camera';\n\n/* Component */\nclass Camera extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props  = props;\n        this.camera = React.createRef();\n\n        this.takePicture = this.takePicture.bind(this);\n    }\n\n    takePicture() {\n        this.camera.capture()\n        .then(blob => {\n            var reader = new FileReader();\n            reader.readAsDataURL(blob);\n            reader.onloadend = function() {\n                var base64data = reader.result;\n                console.log(base64data);\n            }\n        });\n    }\n\n    render() {\n        const { children } = this.props;\n\n        return (\n            <div className=\"camera\">\n                <div className=\"camera__overlay\"></div>\n                <Cam ref={(cam) => { this.camera = cam; }}>\n                    <div className=\"camera__content\">\n                        {children}\n                    </div>\n                </Cam>\n            </div>\n        );\n    }\n};\n\n/* Exporting */\nexport default Camera;\n","/* Packages */\nimport React, { Component } from 'react';\n\n/* Component */\nclass Item extends Component {\n    render () {\n        const {\n            preTitle,\n            subTitle,\n            children,\n        } = this.props;\n\n        return (\n            <div className=\"item\">\n                {preTitle && (\n                    <div className=\"item__secondary\">\n                        {preTitle}\n                    </div>\n                )}\n                <div className=\"item__primary\">\n                    {children}\n                </div>\n                {subTitle && (\n                    <div className=\"item__secondary\">\n                        {subTitle}\n                    </div>\n                )}\n            </div>\n        );\n    }\n};\n\n/* Exporting */\nexport default Item;\n","/* Object to represent Service Functions */\nconst ls = {\n    get   : (itemId) => {\n        return JSON.parse(window.localStorage.getItem(itemId));\n    },\n    set   : (itemId, itemContent) => {\n        return window.localStorage.setItem(itemId, JSON.stringify(itemContent));\n    },\n    remove: (itemId) => {\n        window.localStorage.removeItem('itemId');\n    },\n};\n\nexport default ls;\n","/* Packages */\nimport React, { Component } from 'react';\n\n/* Services */\nimport { ls } from '../../services';\n\n/* Components */\nimport { Item } from '../';\n\n/* Component it self */\nclass List extends Component {\n    /**\n     * Constructor\n     *\n     * @param {object} props - React Component inherit props\n     */\n    constructor(props) {\n        super(props);\n\n        this.props = props;\n        this.state = {\n            active: false,\n            top   : ls.get('top'),\n            middle: ls.get('middle'),\n            bottom: ls.get('bottom'),\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.toggle       = this.toggle.bind(this);\n    }\n\n    componentWillMount() {\n        const { top, middle, bottom } = this.state;\n\n        if (!top && !middle && !bottom) {\n            this.toggle();\n        }\n    }\n\n    handleChange(evt) {\n        const { target }      = evt;\n        const { name, value } = target;\n\n        this.setState({\n            [name]: value,\n        }, () => {\n            ls.set(name, value);\n        });\n    }\n\n    toggle() {\n        this.setState({\n            active: !this.state.active,\n        });\n    }\n\n    /* Render */\n    render() {\n        const { active, top, middle, bottom } = this.state;\n        const concatPlus = '<div class=\"item__concat\">+</div>';\n        const concatAnd = '<div class=\"item__concat\">&</div>';\n\n        return (\n            <div className=\"list\">\n                <div className=\"list__outdoor\">\n                    <Item preTitle={top} subTitle={bottom}>\n                        <div dangerouslySetInnerHTML={{ __html: middle ? middle.replace(/\\r?\\n/, '<br />').replace('&', concatAnd).replace('+', concatPlus) : middle }} />\n                    </Item>\n                </div>\n                <div className={`list__panel ${active ? 'active' : ''}`}>\n                    <div className=\"list__item\">\n                        <div> FILL to SCREEN </div>\n                        <div>\n                            <input className=\"list__item__control\"\n                                   placeholder=\"top text\"\n                                   type=\"text\"\n                                   name=\"top\"\n                                   value={top}\n                                   onChange={this.handleChange}\n                            />\n                        </div>\n                        <div>\n                            <textarea className=\"list__item__control\"\n                                      placeholder=\"middle text\"\n                                      name=\"middle\"\n                                      value={middle}\n                                      onChange={this.handleChange}\n                            />\n                        </div>\n                        <div>\n                            <input className=\"list__item__control\"\n                                   placeholder=\"bottom text\"\n                                   type=\"text\"\n                                   name=\"bottom\"\n                                   value={bottom}\n                                   onChange={this.handleChange}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <button className=\"list__toggle\"\n                        type=\"button\"\n                        onClick={this.toggle}>\n                    {active ? 'CLOSE' : 'EDIT'}\n                </button>\n            </div>\n        );\n    }\n};\n\n/* Exporting */\nexport default List;\n","/* Packages */\nimport React, { Component } from 'react';\nimport { ReactMicPlus } from 'react-mic-plus';\n\n/* Component it self */\nclass Microphone extends Component {\n    /**\n     * Constructor\n     *\n     * @param {object} props - React Component inherit props\n     */\n    constructor(props) {\n        super(props);\n\n        this.props = props;\n        this.state = {\n            color     : 'rgba(255, 255, 255, 1)',\n            background: 'transparent',\n            recording : false,\n            width     : window.innerWidth,\n            height    : window.innerHeight,\n        };\n\n        this.handleResize  = this.handleResize.bind(this);\n        this.onReceiveData = this.onReceiveData.bind(this);\n    }\n\n    /**\n     * Will Mount\n     */\n    componentWillMount() {\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    /**\n     * Will Unmount\n     */\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    /**\n     * Did Mount\n     */\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({\n                recording: true,\n            });\n        }, 1000);\n    }\n\n    /**\n     * On record data\n     */\n    onReceiveData(recordedBlob) {\n        if (this.props.onData) {\n            this.props.onData(recordedBlob);\n        }\n    }\n\n    /**\n     * Handle with window resize\n     */\n    handleResize() {\n        this.setState({\n            width : window.innerWidth,\n            height: window.innerHeight,\n        });\n    }\n\n    /* Render */\n    render() {\n        const {\n            background,\n            color,\n            recording,\n            width,\n            height\n        } = this.state;\n\n        return (\n            <div className=\"microphone\">\n                <ReactMicPlus\n                    record={recording}\n                    width={width}\n                    height={height}\n                    strokeColor={color}\n                    duration={5}\n                    onData={this.onReceiveData}\n                    backgroundColor={background}\n                    className=\"microphone\"\n                />\n            </div>\n        );\n    }\n};\n\n/* Exporting */\nexport default Microphone;\n","/* Packages */\nimport React, { Component } from 'react';\n\n/* Sub Components */\nimport { Background, Camera, List, Microphone } from './components';\n\n/* Component */\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.props = props;\n        this.state = {\n            micData: null,\n        };\n\n        this.timer = null;\n        this.onMic = this.onMic.bind(this);\n    }\n\n    /**\n     * onMic\n     */\n    onMic(data) {\n        if (this.timer) {\n            return;\n        }\n\n        this.timer = setTimeout(() => {\n            this.setState({\n                micData: data,\n            }, () => {\n                this.timer = null;\n            });\n        }, 2000);\n    }\n\n    render() {\n        return (\n            <Background>\n                <Camera>\n                    <List />\n                    <Microphone audioBitsPerSecond={32000} />\n                </Camera>\n            </Background>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}